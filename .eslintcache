[{"/home/mamad/Desktop/phinixAnt/phinixant/src/index.js":"1","/home/mamad/Desktop/phinixAnt/phinixant/src/App.js":"2","/home/mamad/Desktop/phinixAnt/phinixant/src/reportWebVitals.js":"3","/home/mamad/Desktop/phinixAnt/phinixant/src/components/SiderInner.js":"4","/home/mamad/Desktop/phinixAnt/phinixant/src/pages/LayoutComp.js":"5","/home/mamad/Desktop/phinixAnt/phinixant/src/pages/auth/Login.js":"6","/home/mamad/Desktop/phinixAnt/phinixant/src/pages/dashboard/index.js":"7","/home/mamad/Desktop/phinixAnt/phinixant/src/pages/user/index.js":"8","/home/mamad/Desktop/phinixAnt/phinixant/src/components/IsAuth.js":"9"},{"size":235,"mtime":1607253306084,"results":"10","hashOfConfig":"11"},{"size":704,"mtime":1607268416371,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1606898516592,"results":"13","hashOfConfig":"11"},{"size":708,"mtime":1607268523852,"results":"14","hashOfConfig":"11"},{"size":2274,"mtime":1607268804358,"results":"15","hashOfConfig":"11"},{"size":2018,"mtime":1607264630971,"results":"16","hashOfConfig":"11"},{"size":1152,"mtime":1607263622248,"results":"17","hashOfConfig":"11"},{"size":1199,"mtime":1607263398482,"results":"18","hashOfConfig":"11"},{"size":278,"mtime":1607268301352,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"w6y0g0",{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"22"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"/home/mamad/Desktop/phinixAnt/phinixant/src/index.js",[],["45","46"],"/home/mamad/Desktop/phinixAnt/phinixant/src/App.js",["47"],"import 'antd/dist/antd.css';\nimport { ConfigProvider } from 'antd';\nimport './less/App.less';\nimport React  from 'react'\nimport {BrowserRouter as Router,Switch,Route,Link} from \"react-router-dom\";\nimport Login from './pages/auth/Login'\nimport IsAuth from './components/IsAuth';\nimport LayoutComp from './pages/LayoutComp';\nfunction App(props) {\n\n  return (\n    <ConfigProvider direction=\"ltr\">\n      <Router>\n      <Switch>\n      <Route path=\"/auth/login\">\n            <Login />\n          </Route>\n          <Route path='/'>\n          <IsAuth>\n          <LayoutComp />\n          </IsAuth>\n          </Route>\n          \n        </Switch>\n      </Router>\n  </ConfigProvider>\n  \n  );\n}\n\nexport default App;\n","/home/mamad/Desktop/phinixAnt/phinixant/src/reportWebVitals.js",[],"/home/mamad/Desktop/phinixAnt/phinixant/src/components/SiderInner.js",["48"],"import 'antd/dist/antd.css';\nimport {  Menu } from 'antd';\nimport {\n  UserOutlined,\n  VideoCameraOutlined,\n  UploadOutlined,\n} from '@ant-design/icons';\nimport React , {useState} from 'react'\nimport { Link } from 'react-router-dom';\nfunction SiderInner() {\n\n\n  return (\n   <div>\n    <Menu theme=\"light\" mode=\"inline\" defaultSelectedKeys={['1']}>\n      <Menu.Item key=\"1\" icon={<UserOutlined />}>\n        <Link to='/'>Dashboard</Link>\n      </Menu.Item>\n      <Menu.Item key=\"2\" icon={<VideoCameraOutlined />}>\n      <Link to='/user'>User</Link>\n      </Menu.Item>\n      <Menu.Item key=\"3\" icon={<UploadOutlined />}>\n        nav 3\n      </Menu.Item>\n    </Menu>\n    </div>\n  );\n  }\nexport default SiderInner;\n","/home/mamad/Desktop/phinixAnt/phinixant/src/pages/LayoutComp.js",["49","50","51","52","53"],"import {useState} from 'react'\nimport {Menu , Drawer ,Row,Col , Breadcrumb , Card , Dropdown , Button , Layout} from 'antd'\nimport {Switch , Route, withRouter, Link} from 'react-router-dom'\nimport SiderInner from '../components/SiderInner'\nimport {MenuUnfoldOutlined ,  MenuFoldOutlined ,UserOutlined } from '@ant-design/icons'\nimport User from './user'\nimport Dashboard from './dashboard'\nimport IsAuth from '../components/IsAuth'\n\nconst LayoutComp = (props) =>{\n    const { Header, Sider, Content } = Layout;\n    const [collapsed,setCollapsed] = useState(false)\n    const toggle = () => {\n    setCollapsed(prevState => !prevState)\n    };\n    console.log(props.children);\n    const profileMenu = (\n      <Menu>\n        <Menu.Item>\n          <Link to='/auth/login'>Log Out</Link>\n        </Menu.Item>\n      \n      </Menu>\n    )\n    \n    return(\n    <Layout style={{height : '100vh' , overflow : 'hidden'}}>\n     <Drawer\n          theme='dark'\n          title=\"Admin Dashboard\"\n          placement='left'\n          closable={false}\n          onClose={()=> setCollapsed(prevState => !prevState)}\n          visible={collapsed}\n          style={{padding : '0 !important'}}\n        >\n           <SiderInner />\n        </Drawer>\n <Layout className=\"site-layout\">\n    <Row >\n        <Col span={24}>\n          <Header className=\"site-layout-background\"  theme='dark' style={{ display : 'flex' , justifyContent : 'space-between' , alignItems : 'center'}}>\n            {collapsed \n            ?<MenuUnfoldOutlined onClick={toggle} style={{ color : '#fff' , fontSize : '1.4rem'}} className='trigger' />\n            :<MenuFoldOutlined   onClick={toggle} style={{ color : '#fff' , fontSize : '1.4rem'}} className='trigger' />\n            }\n            <div className='profile'>\n              <Dropdown overlay={profileMenu} placement=\"bottomCenter\">\n                <Button ghost type=\"white\" shape='circle' icon={<UserOutlined />}>\n                </Button>\n            </Dropdown>\n            </div>\n        </Header>\n      </Col>\n    </Row>\n      <Switch>\n      <Route exact path=\"/\">\n          <Dashboard />\n          </Route>\n          <Route path=\"/user\">\n            <User />\n          </Route>\n        </Switch>\n</Layout>\n</Layout>\n    )\n} \n\nexport default withRouter(LayoutComp)","/home/mamad/Desktop/phinixAnt/phinixant/src/pages/auth/Login.js",["54"],"import React from 'react'\nimport { Form, Input, Button, Checkbox, Card, Space } from 'antd';\nimport { UserOutlined, LockOutlined } from '@ant-design/icons';\nimport { withRouter } from 'react-router-dom';\nconst Login = (props) =>{\n        const onFinish = values => {\n         props.history.push('/dashboard')\n        };\n        const val = {\n            usename : 'mamad',\n            password : 'khazaee'\n        }\n    return ( \n        <div className='auth-layout'>\n            <Card>\n                <h1>Login</h1>\n            <Form\n            labelCol={{ span: 24 }}\n            wrapperCol={{ span: 24 }}\n            name=\"normal_login\"\n            className=\"login-form\"\n            initialValues={val}\n            onFinish={onFinish}\n            size='large'\n            >\n                <Space className='form-container' direction='vertical'>\n                <Form.Item\n                label='phone number'\n                    name=\"username\"\n                    rules={[{ required: true, message: 'Please input your Username!' }]}\n                >\n                <Input value={val} prefix={<UserOutlined className=\"site-form-item-icon\" />} placeholder=\"Username\" />\n                </Form.Item>\n                <Form.Item\n                    name=\"password\"\n                    rules={[{ required: true, message: 'Please input your Password!' }]}\n                >\n                    <Input\n                    prefix={<LockOutlined className=\"site-form-item-icon\" />}\n                    type=\"password\"\n                    placeholder=\"Password\"\n                    />\n                </Form.Item>\n                <Form.Item>\n                    <div className='submit-btn-container'>\n                    <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button \">\n                    Log in\n                    </Button>\n                    </div>\n                </Form.Item>\n                </Space>\n    </Form>\n            </Card>\n        </div>\n    )\n}\nexport default withRouter(Login)","/home/mamad/Desktop/phinixAnt/phinixant/src/pages/dashboard/index.js",["55","56","57","58"],"import {Card , Layout , Row , Col , Breadcrumb} from 'antd'\nconst Dashboard = () =>{\n    const { Header, Sider, Content } = Layout;\n    return(\n        <Content className=\"site-layout-background\">\n        <Row style={{height : '50px'}}>\n            <Col className=\"gutter-row\" style={{margin : '1rem'}} span={24}>\n                <Breadcrumb>\n                <Breadcrumb.Item>Home</Breadcrumb.Item>\n                <Breadcrumb.Item>\n                    <a href=\"\">Application Center</a>\n                </Breadcrumb.Item>\n                <Breadcrumb.Item>\n                    <a href=\"\">Application List</a>\n                </Breadcrumb.Item>\n                <Breadcrumb.Item>An Application</Breadcrumb.Item>\n            </Breadcrumb>\n            </Col>\n        </Row>\n    <Row style={{height : '100%'}}>\n          <Col span={24}>\n          <div style={{height : '100%'}} className=\"site-card-border-less-wrapper\">\n            <Card title=\"Card title\" bordered={false} style={{ width: '100%' , height : '100%' }}>\n                dashboard\n            </Card>\n          </div>\n          </Col>\n    </Row>\n    </Content>\n    )\n}\nexport default Dashboard","/home/mamad/Desktop/phinixAnt/phinixant/src/pages/user/index.js",["59","60","61","62","63"],"import LayoutComp from '../LayoutComp'\nimport { Breadcrumb,Row,Col ,Layout } from 'antd'\nimport {Card} from 'antd'\nconst User = () =>{\n    const { Header, Sider, Content } = Layout;\n    return(\n            <Content className=\"site-layout-background\">\n        <Row style={{height : '50px'}}>\n            <Col className=\"gutter-row\" style={{margin : '1rem'}} span={24}>\n                <Breadcrumb>\n                <Breadcrumb.Item>Home</Breadcrumb.Item>\n                <Breadcrumb.Item>\n                    <a href=\"\">Application Center</a>\n                </Breadcrumb.Item>\n                <Breadcrumb.Item>\n                    <a href=\"\">Application List</a>\n                </Breadcrumb.Item>\n                <Breadcrumb.Item>An Application</Breadcrumb.Item>\n            </Breadcrumb>\n            </Col>\n        </Row>\n    <Row style={{height : '100%'}}>\n          <Col span={24}>\n          <div style={{height : '100%'}} className=\"site-card-border-less-wrapper\">\n            <Card title=\"Card title\" bordered={false} style={{ width: '100%' , height : '100%' }}>\n                sss\n            </Card>\n          </div>\n          </Col>\n    </Row>\n    </Content>\n    )   \n}\n\nexport default User","/home/mamad/Desktop/phinixAnt/phinixant/src/components/IsAuth.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":5,"column":46,"nodeType":"70","messageId":"71","endLine":5,"endColumn":50},{"ruleId":"68","severity":1,"message":"72","line":8,"column":17,"nodeType":"70","messageId":"71","endLine":8,"endColumn":25},{"ruleId":"68","severity":1,"message":"73","line":2,"column":34,"nodeType":"70","messageId":"71","endLine":2,"endColumn":44},{"ruleId":"68","severity":1,"message":"74","line":2,"column":47,"nodeType":"70","messageId":"71","endLine":2,"endColumn":51},{"ruleId":"68","severity":1,"message":"75","line":8,"column":8,"nodeType":"70","messageId":"71","endLine":8,"endColumn":14},{"ruleId":"68","severity":1,"message":"76","line":11,"column":21,"nodeType":"70","messageId":"71","endLine":11,"endColumn":26},{"ruleId":"68","severity":1,"message":"77","line":11,"column":28,"nodeType":"70","messageId":"71","endLine":11,"endColumn":35},{"ruleId":"68","severity":1,"message":"78","line":2,"column":31,"nodeType":"70","messageId":"71","endLine":2,"endColumn":39},{"ruleId":"68","severity":1,"message":"79","line":3,"column":13,"nodeType":"70","messageId":"71","endLine":3,"endColumn":19},{"ruleId":"68","severity":1,"message":"76","line":3,"column":21,"nodeType":"70","messageId":"71","endLine":3,"endColumn":26},{"ruleId":"80","severity":1,"message":"81","line":11,"column":21,"nodeType":"82","endLine":11,"endColumn":32},{"ruleId":"80","severity":1,"message":"81","line":14,"column":21,"nodeType":"82","endLine":14,"endColumn":32},{"ruleId":"68","severity":1,"message":"83","line":1,"column":8,"nodeType":"70","messageId":"71","endLine":1,"endColumn":18},{"ruleId":"68","severity":1,"message":"79","line":5,"column":13,"nodeType":"70","messageId":"71","endLine":5,"endColumn":19},{"ruleId":"68","severity":1,"message":"76","line":5,"column":21,"nodeType":"70","messageId":"71","endLine":5,"endColumn":26},{"ruleId":"80","severity":1,"message":"81","line":13,"column":21,"nodeType":"82","endLine":13,"endColumn":32},{"ruleId":"80","severity":1,"message":"81","line":16,"column":21,"nodeType":"82","endLine":16,"endColumn":32},"no-native-reassign",["84"],"no-negated-in-lhs",["85"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'Breadcrumb' is defined but never used.","'Card' is defined but never used.","'IsAuth' is defined but never used.","'Sider' is assigned a value but never used.","'Content' is assigned a value but never used.","'Checkbox' is defined but never used.","'Header' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'LayoutComp' is defined but never used.","no-global-assign","no-unsafe-negation"]